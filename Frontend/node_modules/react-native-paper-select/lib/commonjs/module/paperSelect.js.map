{"version":3,"sources":["paperSelect.tsx"],"names":["PaperSelect","label","arrayList","selectedArrayList","multiEnable","value","onSelection","disabled","hideSearchBox","selectAllEnable","textInputMode","theme","themeOverrides","inputRef","limit","limitError","limitErrorStyle","dialogTitle","selectAllText","searchText","dialogCloseButtonText","dialogDoneButtonText","errorText","containerStyle","textInputStyle","textInputOutlineStyle","dialogStyle","dialogTitleStyle","searchStyle","dialogCloseButtonStyle","dialogDoneButtonStyle","errorStyle","textColor","textInputProps","textInputPropOverrides","checkboxProps","checkboxPropsOverrides","searchbarProps","searchbarPropsOverrides","testID","dialogTestID","searchbarTestID","selectAllCheckboxTestID","itemCheckboxTestIDPrefix","textInputIconProps","style","styles","textInputIcon","size","icon","underlineColor","activeUnderlineColor","outlineColor","activeOutlineColor","left","right","height","Dimensions","get","searchKey","setSearchKey","arrayHolder","setArrayHolder","list","setList","selectedList","setSelectedList","maxLimit","setMaxLimit","length","hasDisabled","setHasDisabled","showLimitError","setShowLimitError","selfInputRef","selectInputRef","visible","setVisible","triggeredByOnCheckedSingle","isMounted","_getData","setTimeout","showDialog","_hideDialog","data","selectedData","finalText","forEach","val","index","el","_id","text","current","blur","_closeDialog","_onFocus","_checkIfAnyItemDisabled","_onChecked","item","indexSelected","findIndex","splice","push","_onCheckedSingle","_exists","_temp","find","_isCheckedAll","_checkAll","slice","_renderItem","_filterFunction","newData","filter","toLowerCase","includes","_list","result","x","container","textInput","undefined","color","colors","error","dialog","paddingHorizontal","searchbar","toString","dialogScrollView","maxHeight","marginBottom","StyleSheet","create","width","borderRadius","justifyContent","alignItems","alignSelf","alignContent","borderColor","backgroundColor","borderWidth","marginHorizontal","marginTop"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React, { memo, useCallback, useEffect, useRef, useState } from 'react';\nimport { View, StyleSheet, Dimensions, FlatList } from 'react-native';\nimport {\n  TextInput,\n  Button,\n  Dialog,\n  Portal,\n  Searchbar,\n  ThemeProvider,\n  useTheme,\n  Text,\n} from 'react-native-paper';\nimport CheckboxInput from '../components/checkBox';\nimport type {\n  ListItem,\n  PaperSelectProps,\n  PaperSelectTextInputProps,\n} from '../interface/paperSelect.interface';\nimport type { InternalTheme } from 'react-native-paper/lib/typescript/types';\n\nconst PaperSelect = ({\n  // Required props\n  label,\n  arrayList,\n  selectedArrayList,\n  multiEnable,\n  value,\n  onSelection,\n\n  // Core props\n  disabled = false,\n  hideSearchBox = false,\n  selectAllEnable = true,\n  textInputMode = 'flat',\n  theme: themeOverrides,\n  inputRef,\n  limit = null,\n  limitError = `You can't select more than ${limit} items.`,\n  limitErrorStyle,\n\n  // Localization props\n  dialogTitle,\n  selectAllText = 'Select all',\n  searchText = 'Search',\n  dialogCloseButtonText = 'Close',\n  dialogDoneButtonText = 'Done',\n  errorText,\n\n  // Style props\n  containerStyle,\n  textInputStyle,\n  textInputOutlineStyle,\n  dialogStyle,\n  dialogTitleStyle,\n  searchStyle,\n  dialogCloseButtonStyle,\n  dialogDoneButtonStyle,\n  errorStyle,\n  textColor,\n\n  // Component props\n  textInputProps: textInputPropOverrides,\n  checkboxProps: checkboxPropsOverrides,\n  searchbarProps: searchbarPropsOverrides,\n\n  // New testID props\n  testID,\n  dialogTestID,\n  searchbarTestID,\n  selectAllCheckboxTestID,\n  itemCheckboxTestIDPrefix = 'checkbox-', // Prefix for item checkboxes testID\n}: PaperSelectProps) => {\n  const theme = useTheme<InternalTheme>(themeOverrides);\n\n  const textInputIconProps = {\n    style: styles.textInputIcon,\n    size: 20,\n    icon: 'chevron-down',\n  };\n\n  const textInputProps: PaperSelectTextInputProps = {\n    underlineColor: textInputPropOverrides?.underlineColor ?? 'black',\n    activeUnderlineColor:\n      textInputPropOverrides?.activeUnderlineColor ?? 'black',\n    outlineColor: textInputPropOverrides?.outlineColor ?? 'black',\n    activeOutlineColor: textInputPropOverrides?.activeOutlineColor ?? 'black',\n    left: textInputPropOverrides?.left,\n    right: textInputPropOverrides?.right ?? (\n      <TextInput.Icon {...textInputIconProps} />\n    ),\n  };\n\n  const { height } = Dimensions.get('window');\n\n  const [searchKey, setSearchKey] = useState<string>('');\n\n  const [arrayHolder, setArrayHolder] = useState<Array<ListItem>>([\n    ...arrayList,\n  ]);\n  const [list, setList] = useState<Array<ListItem>>([...arrayList]);\n  const [selectedList, setSelectedList] = useState<Array<ListItem>>([\n    ...selectedArrayList,\n  ]);\n\n  const [maxLimit, setMaxLimit] = useState<number>(list.length);\n\n  const [hasDisabled, setHasDisabled] = useState<boolean>(false);\n\n  const [showLimitError, setShowLimitError] = useState<boolean>(false);\n\n  const selfInputRef = useRef<any>(null);\n  const selectInputRef = inputRef ?? selfInputRef;\n\n  const [visible, setVisible] = useState<boolean>(false);\n\n  const triggeredByOnCheckedSingle = useRef(false);\n\n  useEffect(() => {\n    let isMounted = true;\n    let _getData = async () => {\n      if (isMounted && showLimitError) {\n        setTimeout(() => {\n          setShowLimitError(false);\n        }, 10000);\n      }\n    };\n\n    _getData();\n    return () => {\n      isMounted = false;\n    };\n  }, [showLimitError]);\n\n  const showDialog = () => setVisible(true);\n\n  const _hideDialog = useCallback(() => {\n    setSearchKey('');\n    var data: Array<ListItem> = [...arrayHolder];\n    var selectedData: Array<ListItem> = [...selectedList];\n    let finalText: string = '';\n    selectedData.forEach((val, index) => {\n      data.forEach((el) => {\n        if (val._id === el._id) {\n          finalText +=\n            index !== selectedData.length - 1 ? `${el.value}, ` : `${el.value}`;\n        }\n      });\n    });\n\n    onSelection({\n      text: finalText,\n      selectedList: selectedData,\n    });\n\n    setVisible(false);\n\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  }, [arrayHolder, selectedList, onSelection, selectInputRef]);\n\n  const _closeDialog = () => {\n    setVisible(false);\n    setSearchKey('');\n    if (selectInputRef && selectInputRef.current) {\n      selectInputRef.current.blur();\n    }\n  };\n\n  const _onFocus = () => {\n    setArrayHolder([...arrayList]);\n    setList([...arrayList]);\n    setMaxLimit([...arrayList].length);\n    setHasDisabled(_checkIfAnyItemDisabled([...arrayList]));\n    setSelectedList([...selectedArrayList]);\n    showDialog();\n  };\n\n  const _onChecked = (item: any) => {\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      selectedData.splice(indexSelected, 1);\n    } else {\n      if (limit && selectedData.length === limit) {\n        setShowLimitError(true);\n      } else {\n        setShowLimitError(false);\n        selectedData.push(item);\n      }\n    }\n    setSelectedList([...selectedData]);\n  };\n\n  const _onCheckedSingle = (item: any) => {\n    triggeredByOnCheckedSingle.current = true;\n\n    var selectedData = [...selectedList];\n    // const index = data.findIndex(x => x._id === item._id);\n    const indexSelected = selectedData.findIndex((val) => val._id === item._id);\n    if (indexSelected > -1) {\n      // selectedData.splice(indexSelected, 1);\n      selectedData = [];\n    } else {\n      selectedData = [];\n      selectedData.push(item);\n    }\n    // console.log(selectedData);\n    setSelectedList([...selectedData]);\n  };\n\n  useEffect(() => {\n    if (triggeredByOnCheckedSingle.current) {\n      triggeredByOnCheckedSingle.current = false;\n      _hideDialog();\n    }\n  }, [selectedList, _hideDialog]);\n\n  const _exists = (item: any) => {\n    // console.log(selectedList);\n    let _temp = [...selectedList];\n    return _temp.find((val: any) => val._id === item._id) ? true : false;\n  };\n\n  const _isCheckedAll = () => {\n    const data = [...list];\n    const selectedData = [...selectedList];\n    return selectedData.length !== 0 && selectedData.length === data.length;\n  };\n\n  const _checkAll = () => {\n    const data = [...list];\n    var selectedData = [...selectedList];\n    if (selectedData.length === data.length) {\n      selectedData = [];\n    } else if (selectedData.length === 0 || selectedData.length > 0) {\n      selectedData = data.slice(0);\n    }\n\n    setSelectedList([...selectedData]);\n  };\n\n  const _renderItem = ({ item }: { item: ListItem }) => (\n    <CheckboxInput\n      {...checkboxPropsOverrides}\n      isChecked={_exists(item)}\n      label={item.value}\n      onPress={() => {\n        multiEnable === true ? _onChecked(item) : _onCheckedSingle(item);\n      }}\n      disabled={item.disabled}\n      testID={`${itemCheckboxTestIDPrefix}${item._id}`}\n    />\n  );\n\n  const _filterFunction = (text: string) => {\n    setSearchKey(text);\n    const newData = arrayHolder.filter((item) =>\n      item.value.toLowerCase().includes(text.toLowerCase())\n    );\n    setList(newData);\n  };\n\n  const _checkIfAnyItemDisabled = (_list: Array<ListItem>) => {\n    const data = [..._list];\n    let result = data.find((x) => x.disabled);\n    return result ? true : false;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <View style={[styles.container, containerStyle]}>\n        <TextInput\n          {...textInputProps}\n          ref={selectInputRef}\n          disabled={disabled}\n          style={[styles.textInput, textInputStyle]}\n          outlineStyle={textInputOutlineStyle}\n          label={label}\n          mode={textInputMode}\n          onFocus={disabled ? undefined : _onFocus}\n          showSoftInputOnFocus={false}\n          value={value}\n          textColor={textColor}\n          error={errorText && errorText?.length > 0 ? true : false}\n          testID={testID}\n        />\n        {errorText ? (\n          <Text\n            style={[\n              {\n                color: theme.colors.error,\n              },\n              errorStyle,\n            ]}\n          >\n            {errorText}\n          </Text>\n        ) : null}\n      </View>\n\n      <View>\n        <Portal>\n          <Dialog\n            style={[styles.dialog, dialogStyle]}\n            visible={visible}\n            dismissable={false}\n            testID={dialogTestID}\n          >\n            <Dialog.Title style={dialogTitleStyle}>\n              {dialogTitle ?? label}\n            </Dialog.Title>\n            <Dialog.ScrollArea style={{ paddingHorizontal: 14 }}>\n              {!hideSearchBox ? (\n                <Searchbar\n                  {...searchbarPropsOverrides}\n                  value={searchKey}\n                  placeholder={searchText}\n                  onChangeText={(text: string) => _filterFunction(text)}\n                  style={[styles.searchbar, searchStyle]}\n                  testID={searchbarTestID}\n                />\n              ) : null}\n\n              {/* <ScrollView\n                style={\n                  (styles.dialogScrollView,\n                    { maxHeight: height - (height * 40) / 100, marginBottom: 8 })\n                }\n                keyboardShouldPersistTaps=\"handled\"\n              >\n                {multiEnable === true\n                  ? _renderListForMulti()\n                  : _renderListForSingle()}\n              </ScrollView> */}\n              <FlatList\n                ListHeaderComponent={\n                  multiEnable === true && selectAllEnable === true ? (\n                    <CheckboxInput\n                      {...checkboxPropsOverrides}\n                      isChecked={_isCheckedAll()}\n                      label={selectAllText}\n                      onPress={() => {\n                        _checkAll();\n                      }}\n                      disabled={\n                        hasDisabled ||\n                        (limit && limit > 0 && limit !== maxLimit)\n                          ? true\n                          : false\n                      }\n                      testID={selectAllCheckboxTestID}\n                    />\n                  ) : null\n                }\n                data={list}\n                renderItem={_renderItem}\n                keyExtractor={(item) => item._id.toString()}\n                keyboardShouldPersistTaps=\"handled\"\n                style={\n                  (styles.dialogScrollView,\n                  {\n                    maxHeight: height - (height * 45) / 100,\n                    marginBottom: 8,\n                  })\n                }\n              />\n              {showLimitError ? (\n                <Text\n                  style={[\n                    {\n                      color: theme.colors.error,\n                    },\n                    limitErrorStyle,\n                  ]}\n                >\n                  {limitError}\n                </Text>\n              ) : null}\n            </Dialog.ScrollArea>\n            <Dialog.Actions>\n              <Button\n                labelStyle={dialogCloseButtonStyle}\n                onPress={_closeDialog}\n              >\n                {dialogCloseButtonText}\n              </Button>\n              <Button labelStyle={dialogDoneButtonStyle} onPress={_hideDialog}>\n                {dialogDoneButtonText}\n              </Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </ThemeProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  dialog: {\n    borderRadius: 5,\n  },\n  dialogScrollView: {\n    width: '100%',\n  },\n  textInput: {\n    // backgroundColor: '#fff',\n    // color: '#000',\n  },\n  textInputIcon: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    alignContent: 'center',\n  },\n  searchbar: {\n    borderColor: '#777777',\n    backgroundColor: '#F1F1F2',\n    borderWidth: 0.25,\n    marginBottom: 10,\n    marginHorizontal: 8,\n    color: '#000',\n    marginTop: 12,\n  },\n});\n\nexport default memo(PaperSelect);\n"]}