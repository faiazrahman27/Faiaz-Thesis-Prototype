{"version":3,"sources":["checkBox.tsx"],"names":["CheckboxInput","isChecked","label","checkboxColor","checkboxLabelStyle","checkboxLabelVariant","checkboxUncheckedColor","checkboxMode","disabled","onPress","testID","styles","container","trim","textAlign","StyleSheet","create","flexDirection","flex","justifyContent"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;;;AAHA;AAcA,MAAMA,aAAa,GAAG,CAAC;AACrBC,EAAAA,SADqB;AAErBC,EAAAA,KAFqB;AAGrBC,EAAAA,aAHqB;AAIrBC,EAAAA,kBAJqB;AAKrBC,EAAAA,oBALqB;AAMrBC,EAAAA,sBANqB;AAOrBC,EAAAA,YAPqB;AAQrBC,EAAAA,QARqB;AASrBC,EAAAA,OATqB;AAUrBC,EAAAA;AAVqB,CAAD,kBAYpB,6BAAC,iBAAD;AAAM,EAAA,KAAK,EAAEC,MAAM,CAACC;AAApB,gBACE,6BAAC,0BAAD,CAAU,IAAV;AACE,EAAA,cAAc,EAAEN,sBADlB;AAEE,EAAA,KAAK,EAAEH,aAFT;AAGE,EAAA,MAAM,EACJK,QAAQ,GACJ,eADI,GAEJP,SAAS,KAAK,IAAd,GACA,SADA,GAEA,WARR;AAUE,EAAA,KAAK,EAAEC,KAAK,CAACW,IAAN,EAVT;AAWE,EAAA,UAAU,EAAE,EAAE,GAAGT,kBAAL;AAAyBU,IAAAA,SAAS,EAAE;AAApC,GAXd;AAYE,EAAA,YAAY,EAAET,oBAZhB;AAaE,EAAA,IAAI,EAAEE,YAbR;AAcE,EAAA,QAAQ,EAAG,SAdb;AAeE,EAAA,QAAQ,EAAEC,QAfZ;AAgBE,EAAA,OAAO,EAAEA,QAAQ,GAAG,MAAM,CAAE,CAAX,GAAcC,OAhBjC;AAiBE,EAAA,MAAM,EAAEC;AAjBV,EADF,CAZF;;AAmCA,MAAMC,MAAM,GAAGI,wBAAWC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,aAAa,EAAE,QADN;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,cAAc,EAAE;AAHP;AADoB,CAAlB,CAAf;;4BAQe,iBAAKnB,aAAL,C","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport React, { memo } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Checkbox } from 'react-native-paper';\nimport type { PaperSelectCheckboxProps } from 'src/interface/checkbox.interface';\n\ninterface CheckboxPropsFull extends PaperSelectCheckboxProps {\n  isChecked: boolean;\n  label: string;\n  onPress: () => void;\n  disabled?: boolean;\n  testID?: string;\n}\n\nconst CheckboxInput = ({\n  isChecked,\n  label,\n  checkboxColor,\n  checkboxLabelStyle,\n  checkboxLabelVariant,\n  checkboxUncheckedColor,\n  checkboxMode,\n  disabled,\n  onPress,\n  testID,\n}: CheckboxPropsFull) => (\n  <View style={styles.container}>\n    <Checkbox.Item\n      uncheckedColor={checkboxUncheckedColor}\n      color={checkboxColor}\n      status={\n        disabled\n          ? 'indeterminate'\n          : isChecked === true\n          ? 'checked'\n          : 'unchecked'\n      }\n      label={label.trim()}\n      labelStyle={{ ...checkboxLabelStyle, textAlign: 'left' }}\n      labelVariant={checkboxLabelVariant}\n      mode={checkboxMode}\n      position={`leading`}\n      disabled={disabled}\n      onPress={disabled ? () => {} : onPress}\n      testID={testID}\n    />\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'column',\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default memo(CheckboxInput);\n"]}